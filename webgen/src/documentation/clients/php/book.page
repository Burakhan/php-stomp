---
title: PHP Stomp Client User Guide
--- name:head pipeline:tags
<link href="{relocatable: /styles/book.css}" rel="stylesheet" type="text/css" />

--- name:content pipeline:tags,asciidoc

{title:}
===========================
Hiram Chirino
v1.0, Dec 2003

Introduction
------------

This project is a PHP Stomp clients that besides it implements the Stomp protocol fully, adds some ActiveMQ specific features that could make your messaging from PHP easier.

Getting Started
---------------

Obtain the source of the library by downloading the distribution and add its content to your `include_path`. Alternatively, you can grab the source and add `src/main` folder to your `include_path`.

Examples are located in `src/examples` folder. Before running them, be sure you have installed this library properly and you have started ActiveMQ broker (recommended version 5.3.0) with Stomp connector enabled (http://activemq.apache.org/stomp.html). 

You can start the first example by running 
	
	cd examples
	php first.php
	
Also, be sure to check comments in the particular examples for some special configuration steps (if needed).

First Example
-------------

The simplest example shows how you can connect to the ActiveMQ message broker and send/receive a message from the queue.

    <?
    // include a library
    require_once("Stomp.php");
    // make a connection
    $con = new Stomp("tcp://localhost:61613");
    // connect
    $con->connect();
    // send a message to the queue
    $con->send("/queue/test", "test");
    echo "Sent message with body 'test'\n";
    // subscribe to the queue
    $con->subscribe("/queue/test");
    // receive a message from the queue
    $msg = $con->readFrame();

    // do what you want with the message
    if ( $msg != null) {
        echo "Received message with body '$msg->body'\n";
        // mark the message as received in the queue
        $con->ack($msg);
    } else {
        echo "Failed to receive a message\n";
    }

    // disconnect
    $con->disconnect();
    ?>

After the execution this script should print

    $ php first.php 
    Sent message with body 'test'
    Received message with body 'test'

and it shows how easy it is to do asynchronous messaging using Stomp.

Transactions
------------

TODO

Durable Subscribers
-------------------

TODO

Connectivity
------------

TODO

Security
--------

TODO

Handling Errors
---------------

TODO